{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from \"@angular/core\";\nimport { DataService } from \"./data.service\";\nimport { LogService } from \"./log.service\";\nlet NewComponent = class NewComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.items2 = [];\n    this.name3 = \"\";\n  }\n\n  addItem(name3) {\n    this.dataService.addData(name3);\n  }\n\n  ngOnInit() {\n    this.items2 = this.dataService.getData();\n  }\n\n};\nNewComponent = __decorate([Component({\n  selector: \"app-new\",\n  template: `<div class=\"panel\">\n    <div>\n      <input [(ngModel)]=\"name3\" placeholder=\"Модель\" />\n      <button (click)=\"addItem(name3)\">Добавить</button>\n    </div>\n    <table>\n      <tr *ngFor=\"let item of items2\">\n        <td>{{ item }}</td>\n      </tr>\n    </table>\n  </div>`,\n  providers: [DataService, LogService]\n})], NewComponent);\nexport { NewComponent };","map":null,"metadata":{},"sourceType":"module"}