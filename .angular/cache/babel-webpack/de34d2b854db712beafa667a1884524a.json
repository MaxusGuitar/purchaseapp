{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from \"@angular/core\";\n\nclass Item {\n  constructor(purchase, price) {\n    this.purchase = purchase;\n    this.price = price;\n    this.done = false;\n  }\n\n}\n\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.isRed = false;\n    this.isGreen = false;\n    this.name = \"Tom\";\n    this.age = 24;\n    this.text = \"\";\n    this.price = 0;\n    this.items = [{\n      purchase: \"Хлеб\",\n      done: false,\n      price: 15.9\n    }, {\n      purchase: \"Масло\",\n      done: false,\n      price: 60\n    }, {\n      purchase: \"Картофель\",\n      done: true,\n      price: 22.6\n    }, {\n      purchase: \"Сыр\",\n      done: false,\n      price: 310\n    }];\n    this.clicks = 0;\n    this.newname = \"Tom\";\n    this.newage = 25;\n    this.newnameagain = \"Max\";\n    this.visibility = true;\n    this.condition = true;\n    this.condition2 = true;\n    this.log(`constructor`);\n  }\n\n  addItem(text, price) {\n    if (text == null || text.trim() == \"\" || price == null) return;\n    this.items.push(new Item(text, price));\n  }\n\n  onChanged(increased) {\n    increased == true ? this.clicks++ : this.clicks--;\n  }\n\n  ngOnInit() {\n    this.log(`onInit`);\n  }\n\n  ngOnDestroy() {\n    this.log(`onDestroy`);\n  }\n\n  log(msg) {\n    console.log(msg);\n  }\n\n  ngOnChanges(changes) {\n    for (let propName in changes) {\n      let chng = changes[propName];\n      let cur = JSON.stringify(chng.currentValue);\n      let prev = JSON.stringify(chng.previousValue);\n      this.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\n    }\n  } // переключаем переменную, то-есть при клике на кнопку будет добавляться класс и убираться повторно\n\n\n  toggle() {\n    this.visibility = !this.visibility;\n  }\n\n  toggle2() {\n    this.condition = !this.condition;\n  }\n\n  toggle3() {\n    this.condition2 = !this.condition2;\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: \"purchase-app\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}